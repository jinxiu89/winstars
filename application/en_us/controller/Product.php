<?php

namespace app\en_us\controller;

use app\common\helper\Category as CategoryHelp;
use app\common\model\Category as CategoryModel;
use app\common\model\Product as ProductModel;

class Product extends Base
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $data = collection((new CategoryModel())->getDataByCode($this->code))->toArray();
        $tree = CategoryHelp::toLayer($data, $name = 'title', $parent_id = 0);
        $best = (new ProductModel())->getBestSales($this->code)->toArray();
        $albums=explode(',',$best['album']);
        $best['album']=$albums[0];
        $this->assign('tree', $tree);
        $this->assign('bestSales', $best);
    }

    public function index()
    {
        abort(404);
    }

    public function details($product = '')
    {
        if (!isset($product) || empty($product)) {
            abort(404);
        }
        $system = config('system.system');
        if ($system['cache']) {
            $result = (new ProductModel())->binarySearchProduct($product, $this->code);
        } else {
            $result = ProductModel::getDetailsByUrlTitle($product, $this->code);
        }
        if (!empty($result)) {
            if (!empty($result['album'])) {
                //产品详情页放大镜的图
                $result['albums'] = explode(',', $result['album']);
                $albums = explode(',', $result['album']);
                $this->assign('albums', $albums);
                $this->assign('album', $albums[0]);
            }
            //查询是否有驱动
            $pDrivers = (new ProductModel())->selectProDriver($result, $this->code);
            $result = $result->toArray();
            return $this->fetch($this->template . '/product/details.html', [
                'result' => $result,
                'pDrivers' => $pDrivers
            ]);
        } else {
            abort(404);
        }
    }
}